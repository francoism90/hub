resolver ${NGINX_LOCAL_RESOLVERS} valid=60s;
resolver_timeout 5s;

upstream octane {
    server systemd-hub-app:8000 weight=5 max_fails=3 fail_timeout=30s;
}

upstream mapped {
    server localhost:1935 weight=3 max_fails=0;
    keepalive 16;
}

upstream remote {
    server localhost:1936 weight=3 max_fails=0;
    keepalive 16;
}

upstream vod {
    server localhost:8081 weight=3 max_fails=0;
    keepalive 16;
}

upstream live {
    server localhost:8082 weight=3 max_fails=0;
    keepalive 16;
}

server {
    listen 8085 reuseport;
    listen [::]:8085 reuseport;

    server_name localhost;
    set $base /app;
    root $base/public;

    # security
    include /etc/nginx/config/security.conf;

    # index
    index index.php;

    # error
    error_page 404 /index.php;

    # service worker
    add_header Service-Worker-Allowed /;

    # vod
    location ^~ /vod/ {
        proxy_pass http://vod/;
        proxy_set_header Host $http_host;
        include /etc/nginx/config/proxy.conf;
    }

    # live
    location ^~ /live/ {
        proxy_pass http://live/;
        proxy_set_header Host $http_host;
        include /etc/nginx/config/proxy.conf;
    }

    # livewire
    location ^~ /livewire {
        try_files $uri $uri/ @octane;
    }

    # assets, media
    location ~ ^/(build/assets|storage)/ {
        expires 7d;
        access_log off;
        add_header Cache-Control public;
        break;
    }

    # pwa
    location /manifest.webmanifest {
        types { } default_type "application/manifest+json webmanifest;";
        return 301 $scheme://$http_host/build/manifest.webmanifest;
    }

    # octane
    location /index.php {
        try_files /not_exists @octane;
    }

    location / {
        try_files $uri $uri/ @octane;
    }

    location @octane {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_pass http://octane$suffix;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include /etc/nginx/config/proxy.conf;
    }

    # additional config
    include /etc/nginx/config/general.conf;
}
